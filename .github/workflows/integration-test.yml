name: Frotend Integration E2E Testing 

on: 
  workflow_call:

jobs:
  integration-tests:
    name: Frontned Integration Tests (with Backend)
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:7.0
        ports: 
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Setup Backend Environment
        uses: ./.github/actions/setup-backend

      - name: Setup Frontend Environment
        uses: ./.github/actions/setup-frontend     


      - name: Wait For MongoDb To be ready
        run: |
          until nc -z localhost 27017; do 
            echo "Waiting For MongoDB..."
            sleep 2 
          done 
          echo "MongoDB is Ready!"

      # Start backend api in background 
      - name: Start Backend API 
        run : |
         echo "Starting backend server.."
         go run main.go &
         echo &! > backend.pid 
         sleep 10 
         echo "backend process started with PIN : $(cat backend.pid)"
        working-directory: ./backend/api 
        env:
          MONGODB_URI: mongodb://localhost:27017 
          PORT: 5000 
        
      # wait for backend to be ready
      - name : Wait For backend API 
        run: |
          echo "Waiting for backend on port 5000.."
          timeout 60 bash -c 'until nc -z localhost 5000; do echo "Waiting for backend..."; sleep 2; done'
          echo "backend port is open , for  testing http response..."
          timeout 30 bash -c 'until curl -f http://localhost:5000 2>/dev/null; do echo "Waiting for http respose .."; sleep 2; done'
          echo " backend  api is ready!"

      # Start Frontend In background 
      - name: Start Fronend in background
        run: |
          echo "Starting Frontend appication on port 80.."
          sudo nohup npm run serve > frotend.log 2>&1 &
          echo $! > frontend.pid 
          sleep 15
          echo "frontend process started"
          if pgrep -f "vue-cli-services serve" > /dev/null; then 
            echo "Vue clid services is running"
          else 
            echo "vue cli service not found, checking logs:"
            sudo cat frontend.log || echo "No log file found"
          fi 
        working-directory: ./frontend 
        env:
          VUE_APP_API_URL: http://localhost:5000 
        
      # wait for frontend to be ready
      - name : Wait For frontend application 
        run: |
          echo "Waiting for frontend on port 80.."
          timeout 60 bash -c 'until nc -z localhost 80; do echo "Waiting for backend..."; sleep 2; done'
          echo "backend port is open , for  testing http response..."
          timeout 30 bash -c 'until curl -f http://localhost:80 2>/dev/null; do echo "Waiting for http respose .."; sleep 2; done'
          echo "frontend application is ready!"  
        working-directory: ./frontend   

      - name: Run Cypress Integration Tests 
        run: npm run cy:run:auth 
        working-directory: ./frontend 
        env:
          CYPRESS_BASE_URL: http://localhost:80
          CYPRESS_API_URL: http://localhost:5000

      - name: Stop Applications 
        if: always()
        run: |
          if [ -f ./backend/api/backend.pid ]; then
            kill $(cat ./backend/api/backend.pid) || true 
          fi 
          if [ -f ./frontend/api/frontend.pid ]; then
            kill $(cat ./frontend/api/frontend.pid) || true 
          fi 
          sudo lsof -ti:5000 | xargs -r sudo kill -9 || true 
          sudo lsof -ti:80 | xargs -r sudo kill -9 || true 